version: '3.8'

services:
  postgres-db:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-supabase_local_dev_pass_2025}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_INITDB_ARGS: "--locale=C --encoding=UTF8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - ai_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Security enhancements
    security_opt:
      - no-new-privileges:true

  n8n-db:
    image: postgres:15-alpine
    container_name: n8n-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${N8N_DB_NAME:-n8n}
      - POSTGRES_USER=${N8N_DB_USER:-n8n_user}
      - POSTGRES_PASSWORD=${N8N_DB_PASSWORD:-n8n_secure_local_pass_2025}
    volumes:
      - n8n_postgres_data:/var/lib/postgresql/data
    networks:
      - ai_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${N8N_DB_USER:-n8n_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Security enhancements
    security_opt:
      - no-new-privileges:true

  memory-db:
    image: postgres:15-alpine
    container_name: n8n-memory-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${MEMORY_DB_NAME:-n8n_memory}
      - POSTGRES_USER=${MEMORY_DB_USER:-memory_user}
      - POSTGRES_PASSWORD=${MEMORY_DB_PASSWORD:-memory_secure_local_pass_2025}
    volumes:
      - memory_postgres_data:/var/lib/postgresql/data
    networks:
      - ai_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${MEMORY_DB_USER:-memory_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Security enhancements
    security_opt:
      - no-new-privileges:true

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "${N8N_PORT:-5678}:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n-db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${N8N_DB_NAME:-n8n}
      - DB_POSTGRESDB_USER=${N8N_DB_USER:-n8n_user}
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD:-n8n_secure_local_pass_2025}
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=${N8N_WEBHOOK_URL:-http://localhost:5678}
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_AUTH_PASSWORD:-LocalDev2025!}
      - GENERIC_TIMEZONE=${TIMEZONE:-Europe/Berlin}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-n8n_local_dev_key_32_chars_long_123}
      - NODE_FUNCTION_ALLOW_EXTERNAL=axios,moment,lodash,n8n-nodes-*
      # Additional security settings
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_HIRING_BANNER_ENABLED=false
    volumes:
      - n8n_data:/home/node/.n8n
      - ./shared-files:/files:ro
    networks:
      - ai_network
    depends_on:
      n8n-db:
        condition: service_healthy
    # Security enhancements
    security_opt:
      - no-new-privileges:true

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    ports:
      - "${OLLAMA_PORT:-11434}:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - ai_network
    # GPU support
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    # Use hardware acceleration (CUDA or CPU features)
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    # Security enhancements
    security_opt:
      - no-new-privileges:true

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    restart: unless-stopped
    ports:
      - "${OPEN_WEBUI_PORT:-3000}:8080"
    environment:
      - OLLAMA_API_BASE_URL=http://ollama:11434/api
      - SECRET_KEY=${WEBUI_SECRET_KEY:-webui_local_dev_secret_key_2025}
      - WEBUI_AUTH=${WEBUI_AUTH:-false}
    volumes:
      - open_webui_data:/app/backend/data
    networks:
      - ai_network
    depends_on:
      - ollama
    # Security enhancements
    security_opt:
      - no-new-privileges:true

networks:
  ai_network:
    driver: bridge

volumes:
  postgres_data:
  n8n_postgres_data:
  memory_postgres_data:
  n8n_data:
  ollama_data:
  open_webui_data:
